#!/bin/sh
[ -z $1 ] && echo "no commnit A">&2 && exit 1
[ -z $2 ] && echo "no commnit B">&2 && exit 2
[ -z $3 ] && echo "no branch">&2 && exit 3
[ -z $4 ] && echo "no message">&2 && exit 4
# Go back to the last commit that we want to form the initial commit (detach HEAD)
git checkout $2

# reset the branch pointer to the initial commit (= $1),
# but leaving the index and working tree intact.
git reset --soft $1

# amend the initial tree using the tree from $2
git commit --amend -m "$4"

# remember the new commit sha1
TARGET=`git rev-list HEAD --max-count=1`

# go back to the original branch (assume master for this example)
git checkout $3

# Replay all the commits after $2 onto the new initial commit
git rebase --onto $TARGET $2
